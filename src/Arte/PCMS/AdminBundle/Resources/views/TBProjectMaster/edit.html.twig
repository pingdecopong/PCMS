{% extends 'ArtePCMSAdminBundle::layout.html.twig' %}
{% form_theme form 'pingdecopongFormFreezeBundle:Form:form_layout.html.twig' %}

{% block body -%}
    <header>
        <h1>案件編集</h1>
    </header>
    <section class="section">
        <h1 class="caption"><span id="selectFolderName">案件編集</span></h1>

        {% if mode == 'input' %}
        <div class="functionListArea" style="margin: 10px 0;">
            <ul class="functionList clearfix">
                <li class="home"><a href="{{ path('project') }}?{{ returnUrlParam|raw }}">一覧へもどる</a></li>
            </ul>
        </div>
        {% endif %}

        <form action="{{ path('project_edit', { 'id': ID }) }}" novalidate method="post" {{ form_enctype(form) }} name="project_edit_form">

            <div class="error_validation">
                {{ form_errors(form) }}
            </div>

            <table width="600" border="0" cellpadding="0" cellspacing="0" class="detailTable">
                <tr>
                    <th scope="row">{{ form_label(form.TBProjectMaster.Name) }}</th>
                    <td>
                        <div class="error_validation_inline">
                            {{ form_errors(form.TBProjectMaster.Name) }}
                        </div>
                        {{ form_widget(form.TBProjectMaster.Name) }}
                    </td>
                </tr>
                <tr>
                    <th scope="row">{{ form_label(form.TBProjectMaster.TBCustomerCustomerId) }}</th>
                    <td>
                        <div class="error_validation_inline">
                            {{ form_errors(form.TBProjectMaster.TBCustomerCustomerId) }}
                        </div>
                        {{ form_widget(form.TBProjectMaster.TBCustomerCustomerId) }}
                    </td>
                </tr>
                <tr>
                    <th scope="row">{{ form_label(form.TBProjectMaster.PeriodStart) }}</th>
                    <td>
                        <div class="error_validation_inline">
                            {{ form_errors(form.TBProjectMaster.PeriodStart) }}
                        </div>
                        {{ form_widget(form.TBProjectMaster.PeriodStart) }}
                    </td>
                </tr>
                <tr>
                    <th scope="row">{{ form_label(form.TBProjectMaster.PeriodEnd) }}</th>
                    <td>
                        <div class="error_validation_inline">
                            {{ form_errors(form.TBProjectMaster.PeriodEnd) }}
                        </div>
                        {{ form_widget(form.TBProjectMaster.PeriodEnd) }}
                    </td>
                </tr>
                <tr>
                    <th scope="row">{{ form_label(form.TBProjectMaster.TBSystemUserManagerId) }}</th>
                    <td>
                        <div class="error_validation_inline">
                            {{ form_errors(form.TBProjectMaster.TBSystemUserManagerId) }}
                        </div>
                        {{ form_widget(form.TBProjectMaster.TBSystemUserManagerId) }}
                    </td>
                </tr>
                <tr>
                    <th scope="row">{{ form_label(form.TBProjectMaster.Status) }}</th>
                    <td>
                        <div class="error_validation_inline">
                            {{ form_errors(form.TBProjectMaster.Status) }}
                        </div>
                        {{ form_widget(form.TBProjectMaster.Status) }}
                    </td>
                </tr>
                <tr>
                    <th scope="row">{{ form_label(form.TBProjectMaster.Explanation) }}</th>
                    <td>
                        <div class="error_validation_inline">
                            {{ form_errors(form.TBProjectMaster.Explanation) }}
                        </div>
                        {{ form_widget(form.TBProjectMaster.Explanation) }}
                    </td>
                </tr>
                <tr>
                    <th scope="row">{{ form_label(form.TBProjectMaster.EstimateFilePath) }}</th>
                    <td>
                        <div class="error_validation_inline">
                            {{ form_errors(form.TBProjectMaster.EstimateFilePath) }}
                        </div>
                        {{ form_widget(form.TBProjectMaster.EstimateFilePath) }}
                        {% if mode == 'input' %}<br/><span class="input_notes">見積ファイルがある場合は、svr2のファイルパスを記入して下さい。</span>{% endif %}
                    </td>
                </tr>
                <tr>
                    <th scope="row">{{ form_label(form.TBProjectMaster.ScheduleFilePath) }}</th>
                    <td>
                        <div class="error_validation_inline">
                            {{ form_errors(form.TBProjectMaster.ScheduleFilePath) }}
                        </div>
                        {{ form_widget(form.TBProjectMaster.ScheduleFilePath) }}
                        {% if mode == 'input' %}<br/><span class="input_notes">スケジュールファイルがある場合は、svr2のファイルパスを記入して下さい。</span>{% endif %}
                    </td>
                </tr>

            </table>

            {% if mode == 'input' %}
                <div class="functionListArea">
                    <ul class="functionList clearfix">
{#
                        <li class="home">
                            <a href="">
                                項目追加
                            </a>
                        </li>
#}
                        <li class="home">
                            {{ form_widget(form.AddSubForm) }}
                        </li>
                    </ul>
                </div>
            {% else %}
                {% do form.AddSubForm.setRendered %}
            {% endif %}


            <table class="gridTable" style="width:100%;">
                <thead>
                <tr>
                    <th class="mainTh sort_cell">
                        <a href="#" >項目名</a>
                    </th>
                    <th class="mainTh sort_cell">
                        <a href="#" >工数</a>
                    </th>

                    <th class="mainTh sort_cell">
                        <a href="#" >グループ</a>
                    </th>
                    <th class="mainTh sort_cell">
                        <a href="#" >追加</a>
                    </th>
                    <th class="mainTh sort_cell">
                        <a href="#" >上</a>
                    </th>
                    <th class="mainTh sort_cell">
                        <a href="#" >下</a>
                    </th>

                    {#
                                            <th class="mainTh function_icon_cell"></th>
                                            <th class="mainTh function_icon_cell"></th>
                                            <th class="mainTh function_icon_cell"></th>
                                            <th class="mainTh function_icon_cell"></th>
                    #}
                    <th class="mainTh function_icon_cell"></th>
                </tr>
                </thead>
                <tbody class="evenRows">

                {% if form.TBProjectMaster.SubForms|length != 0 %}
                    {{ _self.sub_forms(form.TBProjectMaster.SubForms, 0, mode) }}
                {% else %}
                    <tr >
                        <td colspan="7">項目を追加して下さい。</td>
                    </tr>
                    {% do form.TBProjectMaster.SubForms.setRendered %}
                {% endif %}

                </tbody>
            </table>


            <div class="submit_box">
                {% if mode == 'input' %}
                    {{ form_widget(form.Confirm) }}
                    {% do form.Return.setRendered %}
                    {% do form.Submit.setRendered %}
                    {#
                <input type="button" onclick="postConfirm()" value="確認" style="width:100px;"/>
                    #}
                {% elseif mode == 'confirm' %}
                    {% do form.Confirm.setRendered %}
                    {{ form_widget(form.Return) }}
                    {{ form_widget(form.Submit) }}
                    {#
                <input type="button" onclick="postBack()" value="戻る"/>
                <input type="button" onclick="postSubmit()" value="登録" style="width:100px;"/>
                    #}
                {% endif %}
            </div>

            {{ form_widget(form.subform.buttonAction) }}
            {{ form_widget(form.subform.returnAddress) }}

        {{ form_end(form) }}

    </section>

{% endblock %}

{% macro sub_forms(Datas, level, mode) %}
    {% for Data in Datas %}
        <tr>
            {{ form_widget(Data.id) }}
            {{ form_widget(Data.GroupFlag) }}
            <td style="padding-left: {{ level*20 }}px;">
                <div class="error_validation_inline">
                    {{ form_errors(Data.Name) }}
                </div>
                {{ form_widget(Data.Name) }}
                {#
                {{ form_widget(Data.Name, {'attr': {'style': 'margin: 0 0 0 3em;'}}) }}
                #}
            </td>
            <td>
                {% if Data.GroupFlag.vars.value %}
                    {% do Data.Cost.setRendered %}
                {% else %}
                    <div class="error_validation_inline">
                        {{ form_errors(Data.Cost) }}
                    </div>
                    {{ form_widget(Data.Cost) }}
                {% endif %}
            </td>

            <td>
                {% if mode == 'input' %}
                    {% if Data.GroupFlag.vars.value %}
                        {{ form_widget(Data.Group, {'label': '解除'}) }}
                    {% else %}
                        {{ form_widget(Data.Group) }}
                    {% endif %}
                {% else %}
                    {% do Data.Group.setRendered %}
                {% endif %}
            </td>
            <td>
                {% if mode == 'input' %}
                    {% if Data.GroupFlag.vars.value %}
                        {{ form_widget(Data.Add) }}
                    {% else %}
                        {% do Data.Add.setRendered %}
                    {% endif %}
                {% else %}
                    {% do Data.Add.setRendered %}
                {% endif %}
            </td>
            <td>
                {% if mode == 'input' %}
                    {{ form_widget(Data.Up) }}
                {% else %}
                    {% do Data.Up.setRendered %}
                {% endif %}
            </td>
            <td>
                {% if mode == 'input' %}
                    {{ form_widget(Data.Down) }}
                {% else %}
                    {% do Data.Down.setRendered %}
                {% endif %}
            </td>

            <td class="function_icon_cell">
                {% if mode == 'input' %}
                    {{ form_widget(Data.Delete) }}
                {% else %}
                    {% do Data.Delete.setRendered %}
                {% endif %}
            </td>
        </tr>

        {% if Data.SubForms is defined %}
            {{ _self.sub_forms(Data.SubForms, level+1, mode) }}
        {% endif %}

    {% endfor %}
{% endmacro %}

{% block javascripts %}
    <script src="{{ asset('bundles/pingdecopongpdpgenerator/js/jquery/jquery-ui-1.10.3.custom.min.js') }}" ></script>
    <script src="{{ asset('bundles/pingdecopongpdpgenerator/js/jquery/jquery.ui.datepicker-ja.js') }}" ></script>
    <link href="{{ asset('bundles/pingdecopongpdpgenerator/css/jqueryui/jquery-ui-1.10.3.custom.min.css') }}" rel="stylesheet" type="text/css">
    <script type="text/javascript">
        //<![CDATA[
        function postConfirm(){
            document.project_new_form["{{ form.subform.buttonAction.vars.full_name }}"].value = "confirm";
            document.project_new_form.submit();
        }
        function postSubmit(){
            document.project_new_form["{{ form.subform.buttonAction.vars.full_name }}"].value = "submit";
            document.project_new_form.submit();
        }
        function postBack(){
            document.project_new_form["{{ form.subform.buttonAction.vars.full_name }}"].value = "";
            document.project_new_form.submit();
        }

        {% if mode == 'input' %}
        $(function() {
            $( "#{{ form.TBProjectMaster.PeriodStart.vars.id }}" ).datepicker({
                showOn: "button",
                buttonImage: "{{ asset('bundles/pingdecopongpdpgenerator/img/calendar.png') }}",
                buttonImageOnly: true,
                dateFormat: 'yy/mm/dd',
                beforeShow : function() {
                    $('#ui-datepicker-div').css( 'font-size', '70%' );
                }
            });

            $( "#{{ form.TBProjectMaster.PeriodEnd.vars.id }}" ).datepicker({
                showOn: "button",
                buttonImage: "{{ asset('bundles/pingdecopongpdpgenerator/img/calendar.png') }}",
                buttonImageOnly: true,
                dateFormat: 'yy/mm/dd',
                beforeShow : function() {
                    $('#ui-datepicker-div').css( 'font-size', '70%' );
                }
            });
        });
        {% endif %}
        //]]>
    </script>
{% endblock %}
